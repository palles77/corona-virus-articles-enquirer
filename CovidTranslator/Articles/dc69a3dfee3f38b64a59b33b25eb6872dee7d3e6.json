{
    "paper_id": "dc69a3dfee3f38b64a59b33b25eb6872dee7d3e6",
    "metadata": {
        "title": "A complexity-based measure and its application to phylogenetic analysis",
        "authors": [
            {
                "first": "Xiaoqi",
                "middle": [],
                "last": "Zheng",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "Chun",
                "middle": [],
                "last": "Li",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "\u00b7",
                "middle": [
                    "Jun"
                ],
                "last": "Wang",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "X",
                "middle": [],
                "last": "Zheng",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "C",
                "middle": [],
                "last": "Li",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "J",
                "middle": [],
                "last": "Wang",
                "suffix": "",
                "affiliation": {},
                "email": "junwang@dlut.edu.cn"
            }
        ]
    },
    "abstract": [
        {
            "text": "In this article, we propose two well-defined distance metrics of biological sequences based on a universal complexity profile. To illustrate our metrics, phylogenetic trees of 18 Eutherian mammals from comparison of their mtDNA sequences and 24 coronaviruses using the whole genomes are constructed. The resulting monophyletic clusters agree well with the established taxonomic groups.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        }
    ],
    "body_text": [
        {
            "text": "The fast increase of many complete genomes of prokaryotes and eukaryotes raises a fundamental and challenging question to modern phylogenetics: how to reconstruct the phylogenetic history of different organisms using whole genomes? Traditional attempts require a multiple alignment of sequences and assume some sort of an evolutionary model. However, not to say the inherent computational complexity, it is meaningless to align two genomes because different genomes have different genes and gene order, and some evolutionary operations, such as rearrangements and lateral gene transfer, affect the final alignment seriously. Thus there is an urgent need to develop new sequence comparisons to deal with the ever increasing genome data.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Among the early attempts, Snel et al. [1] proposed gene content as a measure of similarity. The gene content between two sequences is defined as the number of genes they share divided by their total number of genes. This method is successful to compare long genomes for its light computational load, but fails to distinguish closely related species, e.g., mitochondrial (mt) genomes of placental mammals (all of them share the same genes and gene order). Observing that relative abundances of all dinucleotides are remarkably constant across the genome, Karlin et al. [2] [3] [4] proposed the \"genome signature\" to describe a genome. The genome signature consists of the array of dinucleotide relative abundances \u03c1 xy = f xy / f x f y extended over all dinucleotides, where f x is the frequency of nucleotide x and f xy is the frequency of dinucleotide x y. The final distance between two genomes is defined as the distance between their corresponding \"signatures\". Blaisdell [5] proposed a Markov chain model of biological sequences, and the difference between two sequences was quantified by the Euclidean distance between their transition matrices.",
            "cite_spans": [
                {
                    "start": 38,
                    "end": 41,
                    "text": "[1]",
                    "ref_id": null
                },
                {
                    "start": 568,
                    "end": 571,
                    "text": "[2]",
                    "ref_id": "BIBREF1"
                },
                {
                    "start": 572,
                    "end": 575,
                    "text": "[3]",
                    "ref_id": "BIBREF2"
                },
                {
                    "start": 576,
                    "end": 579,
                    "text": "[4]",
                    "ref_id": "BIBREF3"
                },
                {
                    "start": 976,
                    "end": 979,
                    "text": "[5]",
                    "ref_id": "BIBREF4"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "From the last decade of the 20th century, many data compression techniques, which were proved to be efficient in information storage and transmission, began to find their use in phylogenetic inferences [6] [7] [8] . The distance metric presented by Li et al. [6] is",
            "cite_spans": [
                {
                    "start": 202,
                    "end": 205,
                    "text": "[6]",
                    "ref_id": null
                },
                {
                    "start": 206,
                    "end": 209,
                    "text": "[7]",
                    "ref_id": null
                },
                {
                    "start": 210,
                    "end": 213,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 259,
                    "end": 262,
                    "text": "[6]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "where K (S|T ) is the conditional Kolmogorov complexity of S given T , and K (S) is the abbreviation of K (S| ), with an empty string. However, Kolmogorov complexity is not a recursive function, that is, it is not incorporated in a computational scheme, and thus generally can only be approximated [9] [10] [11] . The complexity measure proposed by Lempel and Ziv [12] [13] [14] was an explicitly computable implementation of K-complexity for finite sequences, and many text compression algorithms were based on their measure (gzip, zip, and Stacker, for instance).",
            "cite_spans": [
                {
                    "start": 298,
                    "end": 301,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 302,
                    "end": 306,
                    "text": "[10]",
                    "ref_id": null
                },
                {
                    "start": 307,
                    "end": 311,
                    "text": "[11]",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 364,
                    "end": 368,
                    "text": "[12]",
                    "ref_id": null
                },
                {
                    "start": 369,
                    "end": 373,
                    "text": "[13]",
                    "ref_id": null
                },
                {
                    "start": 374,
                    "end": 378,
                    "text": "[14]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "In the following text, we will first introduce the basic concepts and some properties regarding \"LZ complexity\", after which some previously proposed distance metrics are discussed. In the main text, two mathematically rigorous distance metrics based on \"LZ-complexity\" are proposed, and their applications are shown by constructing phylogenetic trees of 18 Eutherian mammals and 24 Coronaviruses including SARS-CoVs.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "For symbol sequences S, T and R defined over a finite alphabet A, let l(S) be the length of S, S(i) be the ith element of S and S(i, j) be the subsequence of S that starts at position i and ends at position j. The sequence R is called an extension of S if R can be written as a concatenation of S and a given sequence T , i.e., R = ST .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lempel-Ziv complexity"
        },
        {
            "text": "An extension R = ST from S is said to be reproducible, denoted by S\u2192R, if there exists an integer p \u2264 l(S) such that T (k) = R( p + k \u2212 1), for k = 1, . . . , l(T ). For example, WACC\u2192 WACCAC with p = 2, and AACGT\u2192 AACGTCGTC with p = 3. Moreover, if an extra different symbol at the end of the extension process is allowed, i.e., S \u2192 R(1, l(R) \u2212 1), we can obtain the definition of producible extension, denoted by S\u21d2R. For example AACGT\u21d2AACGTCGTCW with p = 3. Thus we can say if S\u2192R then S\u21d2R, but the reverse is not always true. An extension is called exhaustive if it is producible but not reproducible. For instance, the extension AACGT\u21d2AACGTCGTCW is exhaustive, but AACGT\u21d2AACGTCGTC is not.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lempel-Ziv complexity"
        },
        {
            "text": "According to the above definitions, any sequence S can be generated from the null sequence using iterated processes of \"producible\" extension. For example, the generating processes of S =AACGT can be written as: \u21d2A\u21d2AA\u21d2AAC\u21d2AACG\u21d2 AACGT, or \u21d2A\u21d2AAC\u21d2AACG\u21d2AACGT. The LZ complexity of a sequence S, denoted by c(S), is defined as the minimum number of steps required to generate S from a null sequence using producible processes, e.g., c(AACGT) = 4. It is easy to declare that, in this case, each extension is exhaustive with a possible exception of the last one, and the LZ complexity of any sequence is unique.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lempel-Ziv complexity"
        },
        {
            "text": "Note that c(ST ) \u2212 c(S) measures the amount of information in T when treating information in S as free. So if S and T are closely related to each other, c(ST ) \u2212 c(S) will be very small, i.e., it measures the degree of dissimilarity. From this consideration, Otu and Sayood [7] defined the distances between two sequences as follows:",
            "cite_spans": [
                {
                    "start": 274,
                    "end": 277,
                    "text": "[7]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Distance metrics based on LZ complexity and their limitations"
        },
        {
            "text": "(1), (2) and their normalized versions were used to infer the phylogenetic relationships among 20 Eutherian mammals. The resulting monophyletic clusters agree well with the established taxonomic groups. Li et al. [15] defined a conditional producible operation. The minimum number of conditional producible operations were considered as the conditional complexity given T , denoted by c(S|T ). The distance between two sequences S and T was characterized by",
            "cite_spans": [
                {
                    "start": 5,
                    "end": 8,
                    "text": "(2)",
                    "ref_id": "BIBREF1"
                },
                {
                    "start": 213,
                    "end": 217,
                    "text": "[15]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Distance metrics based on LZ complexity and their limitations"
        },
        {
            "text": "However, one can find that the above two distances are actually not metrics. Mathematically, a function d(X, Y ) defined on a set S is called a distance metric if for any X, Y, Z \u2208 S, the following three conditions are satisfied:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Distance metrics based on LZ complexity and their limitations"
        },
        {
            "text": "The above three conditions are essential characterizations of a distance measure. They are all necessary for the accurate clustering of a data set. But the above two distances do not satisfy the identity condition as d(S, S) = 0 if the last generating step is exhaustive, and d(S, T ) may be equal to 0 when S = T . Therefore, it is significant to revise the above distances or propose some more rigorous methods.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Distance metrics based on LZ complexity and their limitations"
        },
        {
            "text": "In the present work, we define two new distance metrics of symbol sequences. Instead of considering the conditional compression ratio as done by Otu and Sayood, we make use of a maximum operation. The distances between two sequences S and T are defined as:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "New distance metrics"
        },
        {
            "text": "where R can be any sequence over the alphabet A. The first distance is evaluated by the maximum complexity divergency between S and T when adding the same suffix. If change the suffix into prefix, we get d 2 (S, T ). We have two theorems below. Theorem 1 shows the validity of d 1 and d 2 , and Theorem 2 gives a concrete computational approach of d 1 .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "New distance metrics"
        },
        {
            "text": "The functions d 1 (S, T ) and d 2 (S, T ) are distance metrics, i.e., they satisfy the three axioms for a metric.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Theorem 2.1"
        },
        {
            "text": "Proofs of above two theorems will be given in So d 2 is actual a refinement of d. However, the difference between d and d 2 is so small, and perhaps no difference can be detected between their resulting phylogenies. In the following, we will use an alternative distance, d 1 , to infer phylogenies of two data sets.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Theorem 2.2 Let S and T be any symbolic sequences. We have"
        },
        {
            "text": "The mammalian phylogenetic relationship at the molecular level remains to be a controversial topic in nowadays molecular genetics. Different molecular data and analyses result in trees of different topological structures, and the most debatable is the relationship among three main groups of placental mammals, namely Primates, Ferungulates, and Rodents.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Applications to phylogenetic analysis"
        },
        {
            "text": "In the present work, we choose the whole mitochondrial genomes of 17 placental mammals and the platypus to construct the phylogenetic tree. Platypus, the only nonplacental mammal, is selected as the outgroup. All the 18 data files are obtained from GenBank. In the first step, pairwise distance matrix is calculated using the distance d 1 , then phylogenetic tree is constructed from the matrix using the UPGMA program in the PHYLIP package [16] . The final tree drawn by TREEVIEW [17] is shown in Fig. 1 . According to our tree, species within each main group are clustered accordingly, and platypus stays outside of all 17 placental mammals. Notably, our result supports the topology of [Primates (Rodents, Ferungulates)], which is slightly different from the results of Li et al. [6] and Otu and Sayood [7] . Fig. 1 Evolutionary tree of 18 mammalian species using the distance metric d 1 . The resulting tree supports the topology of (Primates (Rodents, Ferungulates)), that is, Rodents and Ferungulates are the closest pair As another application, we infer the evolutionary relationships of 24 coronaviruses including SARS-CoVs (Severe Acute Respiratory Syndrome). Coronaviruses are members of a family of enveloped viruses that replicate in the cytoplasm of animal host cell. According to the type of the host, coronaviruses isolated previously are classified into three groups, groups I and II contain mammalian viruses, whereas group III contains only avian viruses. Marra et al. [18] and Rota et al. [19] first chose data from above three groups and some SARS-CoVs to construct phylogenetic tree. Their results indicate that SARS-CoVs are not closely related to any of the previously characterized coronaviruses and form a new fourth group. Using similar data, Zheng et al. [20] applied a geometric approach. They transformed each coronavirus genome into \"Z-curve\", an equivalent graphical representation of DNA sequence, then used geometric center and three eigenvectors of \"Z-curve\" as descriptors of this genome.",
            "cite_spans": [
                {
                    "start": 441,
                    "end": 445,
                    "text": "[16]",
                    "ref_id": "BIBREF15"
                },
                {
                    "start": 481,
                    "end": 485,
                    "text": "[17]",
                    "ref_id": null
                },
                {
                    "start": 783,
                    "end": 786,
                    "text": "[6]",
                    "ref_id": null
                },
                {
                    "start": 806,
                    "end": 809,
                    "text": "[7]",
                    "ref_id": null
                },
                {
                    "start": 1487,
                    "end": 1491,
                    "text": "[18]",
                    "ref_id": null
                },
                {
                    "start": 1508,
                    "end": 1512,
                    "text": "[19]",
                    "ref_id": null
                },
                {
                    "start": 1782,
                    "end": 1786,
                    "text": "[20]",
                    "ref_id": null
                }
            ],
            "ref_spans": [
                {
                    "start": 498,
                    "end": 504,
                    "text": "Fig. 1",
                    "ref_id": null
                },
                {
                    "start": 812,
                    "end": 818,
                    "text": "Fig. 1",
                    "ref_id": null
                }
            ],
            "section": "Applications to phylogenetic analysis"
        },
        {
            "text": "Motivated by Rota et al., Marra et al. and Zheng et al., we use our distances to infer the phylogenetic relations of the above coronaviruses (data are shown in Table 1 ). However, different from the first data set (mitochondrial genomes), lengths of coronavirus genomes vary significantly (from 27 kb to above 31 kb). In order to eliminate the effects of different lengths, we normalize our distances by dividing the sum and maximum of c(S) and c(T ). The consensus tree drawn by TREEVIEW is shown as Fig. 2 . We find that our topology coincides well with the conventional taxonomic groups, i.e., coronaviruses within each typical group (I human coronaviruses, II bovine coronaviruses and Murine hepatitis viruses, III avian viruses) cluster accordingly, and Fig. 2 The consensus tree constructed by two normalized versions of the distance d 1 (by dividing the maximum and sum of c(S) and c(T ), respectively). According to this tree, all 12 SARS-CoVs are clustered and form new group, which is distantly related to the group II coronaviruses all 12 SARS-CoV strains are grouped together and form a new fourth group, which is distantly related to the group II coronaviruses. This result is in accordance with maximum likelihood tree built from a fragment of the spike protein [21] , and also agrees with the alignment tree from comparing replicase ORF1b amino acid sequences of some viruses [22] .",
            "cite_spans": [
                {
                    "start": 1276,
                    "end": 1280,
                    "text": "[21]",
                    "ref_id": null
                },
                {
                    "start": 1391,
                    "end": 1395,
                    "text": "[22]",
                    "ref_id": null
                }
            ],
            "ref_spans": [
                {
                    "start": 160,
                    "end": 167,
                    "text": "Table 1",
                    "ref_id": "TABREF0"
                },
                {
                    "start": 501,
                    "end": 507,
                    "text": "Fig. 2",
                    "ref_id": null
                },
                {
                    "start": 759,
                    "end": 765,
                    "text": "Fig. 2",
                    "ref_id": null
                }
            ],
            "section": "Applications to phylogenetic analysis"
        },
        {
            "text": "With the completion of many genome projects of Prokaryotes and Eukaryotes, whole genome phylogenies are available and expected to be more accurate compared to traditional experiments on only a single gene or a fragment of genome. However, multiple sequence alignment of genomic sequences is still a bottleneck, first due to the computational time, and second due to the inherent model assumptions. Therefore, there is a great need to develop new sequence comparisons free of the above problems. In recent years, a quantity of alignment-free methods, e.g. complexity-based approaches [6, 7] , k-words composition [23] and graphical representations [24] [25] [26] [27] [28] [29] [30] have been proposed. However, compared to the alignment method, alignment-free comparison methods are still in their premature stage.",
            "cite_spans": [
                {
                    "start": 583,
                    "end": 586,
                    "text": "[6,",
                    "ref_id": null
                },
                {
                    "start": 587,
                    "end": 589,
                    "text": "7]",
                    "ref_id": null
                },
                {
                    "start": 612,
                    "end": 616,
                    "text": "[23]",
                    "ref_id": null
                },
                {
                    "start": 647,
                    "end": 651,
                    "text": "[24]",
                    "ref_id": null
                },
                {
                    "start": 652,
                    "end": 656,
                    "text": "[25]",
                    "ref_id": null
                },
                {
                    "start": 657,
                    "end": 661,
                    "text": "[26]",
                    "ref_id": null
                },
                {
                    "start": 662,
                    "end": 666,
                    "text": "[27]",
                    "ref_id": null
                },
                {
                    "start": 667,
                    "end": 671,
                    "text": "[28]",
                    "ref_id": null
                },
                {
                    "start": 672,
                    "end": 676,
                    "text": "[29]",
                    "ref_id": null
                },
                {
                    "start": 677,
                    "end": 681,
                    "text": "[30]",
                    "ref_id": "BIBREF29"
                }
            ],
            "ref_spans": [],
            "section": "Conclusions"
        },
        {
            "text": "In this article, we propose two well-defined distance metrics on the basis of a universal sequence complexity. To illustrate them, phylogenetic trees of 18 mammals and 24 coronaviruses are constructed, and results show that our distances can successfully cluster species at different levels. In the first data set, our tree supports the topology of [Primates (Rodents, Ferungulates)], i.e., Rodents and Ferungulates are the closest pair. Phylogenetic tree built from the second data set shows that all 12 SARS-CoV strains are grouped together and form a new fourth group, which is distantly related to the group II coronaviruses. In contrast to the traditional alignment method, our method does not suffer from some evolutionary operations, e.g., gaps and large rearrangements in genomic sequences. Moreover, it is fully automated, i.e., does not need any free parameter and human intervention. So it could serve as an alternative way of genome comparison, especially in the case that there are no agreed-upon evolutionary models.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Conclusions"
        },
        {
            "text": "Proof of Theorem 1 The positivity and symmetry conditions obviously hold according to the definition of d 1 . We will check the triangle condition by introducing a sequence Q.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Conclusions"
        },
        {
            "text": "which is the triangle inequality, as required. We now need to show that d 1 (3) If neither of the last generating step of S and T is exhaustive, we can add the same suffix Q to these two sequences till at least one of the last steps of S Q and T Q is exhaustive, which will come back to the above two cases.",
            "cite_spans": [
                {
                    "start": 74,
                    "end": 75,
                    "text": "1",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Conclusions"
        },
        {
            "text": "In order to prove Theorem 2, we first give a lemma: ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Conclusions"
        }
    ],
    "bib_entries": {
        "BIBREF1": {
            "ref_id": "b1",
            "title": "Proc. Natl. Acad. Sci. USA",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Campbell",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Mrazek",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Karlin",
                    "suffix": ""
                }
            ],
            "year": 1999,
            "venue": "",
            "volume": "96",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF2": {
            "ref_id": "b2",
            "title": "Proc. Natl. Acad. Sci. USA",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Karlin",
                    "suffix": ""
                },
                {
                    "first": "I",
                    "middle": [],
                    "last": "Ladunga",
                    "suffix": ""
                }
            ],
            "year": 1994,
            "venue": "",
            "volume": "91",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF3": {
            "ref_id": "b3",
            "title": "Proc. Natl. Acad. Sci. USA",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Karlin",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Mr\u00e1zek",
                    "suffix": ""
                }
            ],
            "year": 1997,
            "venue": "",
            "volume": "94",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF4": {
            "ref_id": "b4",
            "title": "Proc. Natl. Acad. Sci. USA",
            "authors": [
                {
                    "first": "B",
                    "middle": [
                        "E"
                    ],
                    "last": "Blaisdell",
                    "suffix": ""
                }
            ],
            "year": 1986,
            "venue": "",
            "volume": "83",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF7": {
            "ref_id": "b7",
            "title": "Similarity analysis of DNA sequences based on the generalized LZ complexity of (0,1)-sequences, Preprint",
            "authors": [
                {
                    "first": "C",
                    "middle": [],
                    "last": "Li",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                }
            ],
            "year": 2006,
            "venue": "J. Math. Chem",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF8": {
            "ref_id": "b8",
            "title": "Elements of Information Theory",
            "authors": [
                {
                    "first": "T",
                    "middle": [
                        "M"
                    ],
                    "last": "Cover",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [
                        "A"
                    ],
                    "last": "Thomas",
                    "suffix": ""
                }
            ],
            "year": 2003,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF10": {
            "ref_id": "b10",
            "title": "Current Topics in Computational Molecular Biology",
            "authors": [
                {
                    "first": "T",
                    "middle": [],
                    "last": "Jiang",
                    "suffix": ""
                },
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Xu",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [
                        "Q"
                    ],
                    "last": "Zhang",
                    "suffix": ""
                }
            ],
            "year": 2002,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "157--171",
            "other_ids": {}
        },
        "BIBREF15": {
            "ref_id": "b15",
            "title": "PHYLIP (Phylogeny Inference Package) version 3.5c. Department of Genetics",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Felsenstein",
                    "suffix": ""
                }
            ],
            "year": 1993,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF29": {
            "ref_id": "b29",
            "title": "Visualization of DNA sequences based on 3DD-Curves, Preprint",
            "authors": [
                {
                    "first": "Y",
                    "middle": [
                        "S"
                    ],
                    "last": "Zhang",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [
                        "S"
                    ],
                    "last": "Tan",
                    "suffix": ""
                }
            ],
            "year": 2007,
            "venue": "J. Math. Chem",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        }
    },
    "ref_entries": {
        "FIGREF0": {
            "text": "the Appendix. Note that c(SS) = c(S) or c(S) + 1, for any sequence S. So the divergency between left and right hand side of d 1 (S, T ) and d 2 (S, T ) is 0 or 1. In the execution, we use their arithmetical average to approximate d 1 (S, T ) and d 2 (S, T ). Mind that the executive version of d 2 is similar to the distance presented by Otu and Sayood (d). d 2 = d when c(ST ) \u2212 c(S) > c(T S) \u2212 c(T ) and c(SS) = c(S), or c(ST ) \u2212 c(S) < c(T S) \u2212 c(T ) and c(T T ) = c(T ), while d 2 = d \u2212 0.5 otherwise.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF1": {
            "text": "(S, T ) satisfies the identity condition. By definition, if S = T , then d 1 (S, T ) = d 1 (S, S) = max R {|c(S R) \u2212 c(S R)|} = 0. In the following, we will prove that d 1 (S, T ) = 0 if S = T . This assertion is clear when c(S) = c(T ) (we only set R be null sequence). When c(S) = c(T ), we have three cases to be considered: (1) If one of S's and T 's last generating steps is exhaustive, we can add a letter l to both ends of S and T , so that c(Sl) = c(T l) \u00b1 1, yielding d 1 (S, T ) \u2265 1. (2) The last generating steps of S and T are both exhaustive. Without loss of generality, we select a subsequence R of S, which does not appear in sequence T . Then we have c(S Rl) = c(S) + 1, and c(T Rl) > c(T ) + 1, where l is an arbitrary letter from alphabet A. So d 1 (S, T ) \u2265 |c(S Rl) \u2212 c(T Rl)| \u2265 1.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF2": {
            "text": "Lemma 1 c(ST R) \u2212 c(ST ) \u2264 c(T R) \u2212 c(T ), for any sequences S, T and R.Proof The left hand side is the number of components R would have when parsed using ST , and the right hand side is the number of components R would have when parsed using S. Having ST instead of T cannot increase the number of components in parsing of R. So the inequality holds.Proof of Theorem 2 Put R be T in Formula(7).Then c(ST )\u2212c(TT ) \u2264 max R {c(SR)\u2212 c(TR)}. Similarly, c(TS) \u2212 c(SS) \u2264 max R {c(TR) \u2212 c(SR)}. So max{(ST ) \u2212 c(TT ), c(TS) \u2212 c(SS)} \u2264 max R {|c(SR) \u2212 c(TR)|},which is the left half of Inequality(9). We now prove the right half of Inequality(9). According toLemma 1, c(STR) \u2212 c(TR) \u2264 c(ST ) \u2212 c(T ). Note that c(STR) \u2265 c(SR), so c(SR) \u2212 c(TR) \u2264 c(ST ) \u2212 c(T ),for any sequences S, T and R. Similarly, c(TR) \u2212 c(SR) \u2264 c(TS) \u2212 c(S). In conclusion, max{c(SR) \u2212 c(TR), c(TR) \u2212 c(SR)} \u2264 max{c(ST ) \u2212 c(T ), c(TS) \u2212 c(S)}, i.e., d 1 (S, T ) \u2264 max{c(ST ) \u2212 c(T ), c(TS) \u2212 c(S)}.The proofs for d 2 are analogous to the case of d 1 .",
            "latex": null,
            "type": "figure"
        },
        "TABREF0": {
            "text": "The accession number, abbreviation, name and length for each of the 24 coronavirus genomes",
            "latex": null,
            "type": "table"
        }
    },
    "back_matter": [
        {
            "text": "Acknowledgements This work was supported in part by Leading Academic Discipline Project of Shanghai Normal University (No. DZL803) and Shanghai Leading Academic Discipline Project (No. S30405).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "acknowledgement"
        }
    ]
}